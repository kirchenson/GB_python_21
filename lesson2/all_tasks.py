'''1. Создать список и заполнить его элементами различных типов данных. Реализовать скрипт проверки типа данных
каждого элемента. Использовать функцию type() для проверки типа. Элементы списка можно не запрашивать у пользователя,
 а указать явно, в программе.'''

arr = ("1", 22, 'Hello', 2.3, None, True)
for i in arr:
    print(type(i))

'''2. Для списка реализовать обмен значений соседних элементов, т.е. Значениями обмениваются элементы 
с индексами 0 и 1, 2 и 3 и т.д. При нечетном количестве элементов последний сохранить на своем месте.
 Для заполнения списка элементов необходимо использовать функцию input().'''

n = int(input('Введите размер списка: '))
if n > 0:
    arr = []
    for i in range(n):
        a = input('Добавить элемент в список: ')
        arr.append(a)
    for i in range(0, n, 2):
        if i != n - 1:
            arr[i], arr[i + 1] = arr[i + 1], arr[i]
    print(arr)
else:
    print('Вводить нужно положительное число')

'''3. Пользователь вводит месяц в виде целого числа от 1 до 12. Сообщить к какому времени года относится 
месяц (зима, весна, лето, осень). Напишите решения через list и через dict.'''

months = []
for i in range(1, 13):
    months.append(i)
n = int(input('Введите номер месяца от 1 до 12: '))
if 0 < n < 13:
    if n < 3 or n == 12:
        print('Зима')
    elif 2 < n < 6:
        print('Весна')
    elif 5 < n < 9:
        print('Лето')
    else:
        print('Осень')
else:
    print('Номер месяца должен быть от 1 до 12')

'''4. Пользователь вводит строку из нескольких слов, разделённых пробелами. Вывести каждое слово с 
новой строки. Строки необходимо пронумеровать. Если в слово длинное, выводить только первые 10 букв в слове.'''

n = input('Введите строку с пробелами: ')
arr = n.split()
for i in arr:
    if len(i) < 11:
        print(str(arr.index(i) + 1) + ' ' + i)
    else:
        # срез до 10 символов для длинных слов
        a = i[0:10]
        print(str(arr.index(i) + 1) + ' ' + a)

'''5. Реализовать структуру «Рейтинг», представляющую собой не возрастающий набор натуральных чисел. 
У пользователя необходимо запрашивать новый элемент рейтинга. Если в рейтинге существуют элементы 
с одинаковыми значениями, то новый элемент с тем же значением должен разместиться после них.
Набор натуральных чисел можно задать непосредственно в коде, например, my_list = [7, 5, 3, 3, 2].'''

arr = [7, 5, 3, 3, 2]
while True:
    a = int(input('Введите элемент рейтинга: '))
    arr.append(a)
    arr.sort(reverse=True)
    print(arr)
    exit = int(input('Для выхода из программы введите 0, для продолжения другой символ: '))
    if exit == 0:
        break
